{"version":3,"file":"static/js/843.aa8755e0.chunk.js","mappings":"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","sources":["pages/tests/planned-indicators/PlannedIndicatorsPage.tsx","pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators.ts"],"sourcesContent":["import { Accordion, AccordionDetails, AccordionSummary, Stack, styled, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material';\r\nimport { teal } from '@mui/material/colors';\r\nimport { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\r\nimport { useSearchParams } from 'react-router';\r\nimport { calculateFullRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators';\r\nimport { calculateMiniRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators';\r\nimport { calculateRowsWithSumPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators';\r\nimport { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\n\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.action.hover,\r\n\t},\r\n}));\r\n\r\nfunction ReplaceArrayValue<TArrayValue> (callback: Dispatch<SetStateAction<TArrayValue[]>>, index: number, value: TArrayValue)\r\n{\r\n\tcallback(function (prevState)\r\n\t{\r\n\t\treturn prevState.map(function (currentValue, currentIndex)\r\n\t\t{\r\n\t\t\treturn index === currentIndex\r\n\t\t\t\t? value\r\n\t\t\t\t: currentValue;\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default function PlannedIndicatorsPage ()\r\n{\r\n\tconst [ searchParams, setSearchParams ] = useSearchParams();\r\n\r\n\tconst [ fuel, setFuel ] = useState(() => searchParams.get('fuel')?.split('|') || []);\r\n\tconst [ units, setUnits ] = useState(() => searchParams.get('units')?.split('|') || []);\r\n\tconst [ base, setBase ] = useState(() => searchParams.get('base')?.split('|') || []);\r\n\tconst [ plan, setPlan ] = useState(() => searchParams.get('plan')?.split('|') || []);\r\n\tconst [ fact, setFact ] = useState(() => searchParams.get('fact')?.split('|') || []);\r\n\tconst [ k, setK ] = useState(() => searchParams.get('k')?.split('|') || []);\r\n\r\n\tconst keys = [ fuel, units, base, plan, fact, k ];\r\n\r\n\tuseEffect(\r\n\t\t() => setSearchParams({\r\n\t\t\tfuel: fuel.join('|'),\r\n\t\t\tunits: units.join('|'),\r\n\t\t\tbase: base.join('|'),\r\n\t\t\tplan: plan.join('|'),\r\n\t\t\tfact: fact.join('|'),\r\n\t\t\tk: k.join('|'),\r\n\t\t}),\r\n\t\tkeys,\r\n\t);\r\n\r\n\tconst rows = useMemo(\r\n\t\tfunction ()\r\n\t\t{\r\n\t\t\tconst data: PlannedRowIndicatorData[] = [];\r\n\r\n\t\t\tfor (const index in fuel)\r\n\t\t\t{\r\n\t\t\t\tdata.push({\r\n\t\t\t\t\t'Вид топлива': fuel[index],\r\n\t\t\t\t\t'Единицы измерения': units[index],\r\n\r\n\t\t\t\t\t'Расход Абс.': {\r\n\t\t\t\t\t\tbase: Number(base[index]),\r\n\t\t\t\t\t\tplan: Number(plan[index]),\r\n\t\t\t\t\t\tfact: Number(fact[index]),\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tk: Number(k[index]),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst mini = calculateMiniRowsPlannedIndicators(data);\r\n\t\t\tconst miniSum = calculateRowsWithSumPlannedIndicators(mini);\r\n\t\t\tconst full = calculateFullRowsPlannedIndicators(miniSum);\r\n\r\n\t\t\tconst fullSum = {\r\n\t\t\t\t...miniSum.sum,\r\n\r\n\t\t\t\t'Удельный вес (%)': {\r\n\t\t\t\t\tbase: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].base, 0).toFixed(3),\r\n\t\t\t\t\tplan: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].plan, 0).toFixed(3),\r\n\t\t\t\t\tfact: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].fact, 0).toFixed(3),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\treturn [ ...full, fullSum ];\r\n\t\t},\r\n\t\tkeys,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Stack spacing={2} sx={{ p: 2 }}>\r\n\t\t\t<h1>Контрольная работа №2 \"Плановые показатели\"</h1>\r\n\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1}>Вид топлива</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={1}>Ед. изм.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Расход Абс.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={1}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Расход УЕ</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВПЗ = П/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВВП = Ф/П</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВФР = Ф/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Удельный вес (%)</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{ /* Вид топлива */ }\r\n\t\t\t\t\t\t\t<TableCell></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Единицы измерения */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trows.map((row, index) => (\r\n\t\t\t\t\t\t\t\t<StyledTableRow key={row['Вид топлива']}>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Вид топлива'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={row['Вид топлива']}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => ReplaceArrayValue(setFuel, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Единицы измерения'] === 'string'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Единицы измерения'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row['Единицы измерения']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => ReplaceArrayValue(setUnits, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].base === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='База' value={row['Расход Абс.'].base} onChange={ (ev) => ReplaceArrayValue(setBase, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].plan === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='План' value={row['Расход Абс.'].plan} onChange={ (ev) => ReplaceArrayValue(setPlan, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].fact === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='Факт' value={row['Расход Абс.'].fact} onChange={ (ev) => ReplaceArrayValue(setFact, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row.k === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='К' value={row.k} onChange={ (ev) => ReplaceArrayValue(setK, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['Расход УЕ'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].fact}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВПЗ = П/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВВП = Ф/П'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВФР = Ф/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['Удельный вес (%)'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].fact}</TableCell>\r\n\t\t\t\t\t\t\t\t</StyledTableRow>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<Accordion defaultExpanded sx={{ bgcolor: teal[50] }}>\r\n\t\t\t\t<AccordionSummary>\r\n\t\t\t\t\t<Typography>Используемые формулы (переписывать НЕ нужно)</Typography>\r\n\t\t\t\t</AccordionSummary>\r\n\r\n\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t<Typography sx={{ fontFamily: 'Consolas, sans-serif' }}>Расход УЕ = Расход Абс. / К</Typography>\r\n\r\n\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>ОВПЗ = (Расход Абс.) План / (Расход Абс.) База</li>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>ОВВП = (Расход Абс.) Факт / (Расход Абс.) План</li>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>ОВФР = (Расход Абс.) Факт / (Расход Абс.) База</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>К = исходное значение</li>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>% (процент) = К * 100</li>\r\n\t\t\t\t\t\t<li style={{ fontFamily: 'Consolas, sans-serif' }}>‰ (промилле) = К * 1000</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t<Typography sx={{ fontFamily: 'Consolas, sans-serif' }}>Удельный вес (%) = Расход Абс. / (Расход Абс.) Σ</Typography>\r\n\t\t\t\t</AccordionDetails>\r\n\t\t\t</Accordion>\r\n\t\t</Stack>\r\n\t);\r\n}\r\n","import { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\nimport { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\n\r\n\r\nexport function calculateMiniRowsPlannedIndicators (rows: PlannedRowIndicatorData[])\r\n{\r\n\treturn rows.map<PlannedRowIndicatorMiniResponse>(function (row)\r\n\t{\r\n\t\tconst main = row['Расход Абс.'];\r\n\r\n\t\tconst parameter1 = Number((main.plan / main.base).toFixed(3));\r\n\t\tconst parameter2 = Number((main.fact / main.plan).toFixed(3));\r\n\t\tconst parameter3 = Number((main.fact / main.base).toFixed(3));\r\n\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Расход УЕ': {\r\n\t\t\t\tbase: Number((main.base * row.k).toFixed(3)),\r\n\t\t\t\tplan: Number((main.plan * row.k).toFixed(3)),\r\n\t\t\t\tfact: Number((main.fact * row.k).toFixed(3)),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВПЗ = П/Б': {\r\n\t\t\t\tk: parameter1,\r\n\t\t\t\t'%': Number((parameter1 * 100).toFixed(3)),\r\n\t\t\t\t'‰': Number((parameter1 * 1000).toFixed(3)),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВВП = Ф/П': {\r\n\t\t\t\tk: parameter2,\r\n\t\t\t\t'%': Number((parameter2 * 100).toFixed(3)),\r\n\t\t\t\t'‰': Number((parameter2 * 1000).toFixed(3)),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВФР = Ф/Б': {\r\n\t\t\t\tk: parameter3,\r\n\t\t\t\t'%': Number((parameter3 * 100).toFixed(3)),\r\n\t\t\t\t'‰': Number((parameter3 * 1000).toFixed(3)),\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n","import { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateRowsWithSumPlannedIndicators (rows: PlannedRowIndicatorMiniResponse[]): PlannedRowsWithSumIndicators\r\n{\r\n\tconst sum = {\r\n\t\t'Вид топлива': 'Σ',\r\n\t\t'Единицы измерения': undefined,\r\n\r\n\t\t'Расход Абс.': {\r\n\t\t\tbase: undefined,\r\n\t\t\tplan: undefined,\r\n\t\t\tfact: undefined,\r\n\t\t},\r\n\r\n\t\tk: undefined,\r\n\r\n\t\t// ===== ===== ===== ===== =====\r\n\r\n\t\t'Расход УЕ': {\r\n\t\t\tbase: Number(rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].base, 0).toFixed(3)),\r\n\t\t\tplan: Number(rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].plan, 0).toFixed(3)),\r\n\t\t\tfact: Number(rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].fact, 0).toFixed(3)),\r\n\t\t},\r\n\r\n\t\t'ОВПЗ = П/Б': {\r\n\t\t\tk: Number(rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б'].k, 0).toFixed(3)),\r\n\t\t\t'%': Number(rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б']['‰'], 0).toFixed(3)),\r\n\t\t\t'‰': Number(rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б']['‰'], 0).toFixed(3)),\r\n\t\t},\r\n\r\n\t\t'ОВВП = Ф/П': {\r\n\t\t\tk: Number(rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П'].k, 0).toFixed(3)),\r\n\t\t\t'%': Number(rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П']['‰'], 0).toFixed(3)),\r\n\t\t\t'‰': Number(rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П']['‰'], 0).toFixed(3)),\r\n\t\t},\r\n\r\n\t\t'ОВФР = Ф/Б': {\r\n\t\t\tk: Number(rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б'].k, 0).toFixed(3)),\r\n\t\t\t'%': Number(rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б']['‰'], 0).toFixed(3)),\r\n\t\t\t'‰': Number(rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б']['‰'], 0).toFixed(3)),\r\n\t\t},\r\n\t};\r\n\r\n\treturn Object.assign(rows, { sum });\r\n}\r\n","import { PlannedRowIndicatorFullResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorFullResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateFullRowsPlannedIndicators (rows: PlannedRowsWithSumIndicators)\r\n{\r\n\treturn rows.map<PlannedRowIndicatorFullResponse>(function (row)\r\n\t{\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Удельный вес (%)': {\r\n\t\t\t\tbase: Number((row['Расход УЕ'].base / rows.sum['Расход УЕ'].base * 100).toFixed(3)),\r\n\t\t\t\tplan: Number((row['Расход УЕ'].plan / rows.sum['Расход УЕ'].plan * 100).toFixed(3)),\r\n\t\t\t\tfact: Number((row['Расход УЕ'].fact / rows.sum['Расход УЕ'].fact * 100).toFixed(3)),\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n"],"names":["StyledTableRow","styled","TableRow","_ref","theme","backgroundColor","palette","action","hover","ReplaceArrayValue","callback","index","value","prevState","map","currentValue","currentIndex","PlannedIndicatorsPage","searchParams","setSearchParams","useSearchParams","fuel","setFuel","useState","_searchParams$get","get","split","units","setUnits","_searchParams$get2","base","setBase","_searchParams$get3","plan","setPlan","_searchParams$get4","fact","setFact","_searchParams$get5","k","setK","_searchParams$get6","keys","useEffect","join","rows","useMemo","data","push","Number","mini","row","main","parameter1","toFixed","parameter2","parameter3","_objectSpread","calculateMiniRowsPlannedIndicators","miniSum","sum","undefined","reduce","accumulator","Object","assign","calculateRowsWithSumPlannedIndicators","full","calculateFullRowsPlannedIndicators","fullSum","_jsxs","Stack","spacing","sx","p","children","_jsx","TableContainer","Table","TableHead","TableCell","colSpan","borderLeft","TableBody","TextField","minWidth","label","onChange","ev","target","type","Accordion","defaultExpanded","bgcolor","teal","AccordionSummary","Typography","AccordionDetails","fontFamily","style"],"sourceRoot":""}