{"version":3,"file":"static/js/843.85ccb5a9.chunk.js","mappings":"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","sources":["pages/tests/planned-indicators/PlannedIndicatorsPage.tsx","pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators.ts"],"sourcesContent":["import { Stack, styled, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { useSearchParams } from 'react-router';\r\nimport { calculateFullRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators';\r\nimport { calculateMiniRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators';\r\nimport { calculateRowsWithSumPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators';\r\nimport { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\n\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.action.hover,\r\n\t},\r\n}));\r\n\r\nexport default function PlannedIndicatorsPage ()\r\n{\r\n\tconst [ searchParams, setSearchParams ] = useSearchParams();\r\n\r\n\tconst [ fuel, setFuel ] = useState(() => searchParams.get('fuel')?.split('|') || []);\r\n\tconst [ units, setUnits ] = useState(() => searchParams.get('units')?.split('|') || []);\r\n\tconst [ base, setBase ] = useState(() => searchParams.get('base')?.split('|') || []);\r\n\tconst [ plan, setPlan ] = useState(() => searchParams.get('plan')?.split('|') || []);\r\n\tconst [ fact, setFact ] = useState(() => searchParams.get('fact')?.split('|') || []);\r\n\tconst [ k, setK ] = useState(() => searchParams.get('k')?.split('|') || []);\r\n\r\n\tconst keys = [ fuel, units, base, plan, fact, k ];\r\n\r\n\tconst replaceArrayValue = (callback: Function, array: any[], index: number, value: string) => callback(array.map((v, i) => index === i ? value : v));\r\n\r\n\tuseEffect(\r\n\t\t() => setSearchParams({\r\n\t\t\tfuel: fuel.join('|'),\r\n\t\t\tunits: units.join('|'),\r\n\t\t\tbase: base.join('|'),\r\n\t\t\tplan: plan.join('|'),\r\n\t\t\tfact: fact.join('|'),\r\n\t\t\tk: k.join('|'),\r\n\t\t}),\r\n\t\tkeys,\r\n\t);\r\n\r\n\tconst rows = useMemo(\r\n\t\tfunction ()\r\n\t\t{\r\n\t\t\tconst data: PlannedRowIndicatorData[] = [];\r\n\r\n\t\t\tfor (const index in fuel)\r\n\t\t\t{\r\n\t\t\t\tdata.push({\r\n\t\t\t\t\t'Вид топлива': fuel[index],\r\n\t\t\t\t\t'Единицы измерения': units[index],\r\n\r\n\t\t\t\t\t'Расход Абс.': {\r\n\t\t\t\t\t\tbase: Number(base[index]),\r\n\t\t\t\t\t\tplan: Number(plan[index]),\r\n\t\t\t\t\t\tfact: Number(fact[index]),\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tk: Number(k[index]),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst mini = calculateMiniRowsPlannedIndicators(data);\r\n\t\t\tconst miniSum = calculateRowsWithSumPlannedIndicators(mini);\r\n\t\t\tconst full = calculateFullRowsPlannedIndicators(miniSum);\r\n\r\n\t\t\tconst fullSum = {\r\n\t\t\t\t...miniSum.sum,\r\n\r\n\t\t\t\t'Удельный вес (%)': {\r\n\t\t\t\t\tbase: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].base, 0).toFixed(3),\r\n\t\t\t\t\tplan: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].plan, 0).toFixed(3),\r\n\t\t\t\t\tfact: full.reduce((accumulator, row) => accumulator + row['Удельный вес (%)'].fact, 0).toFixed(3),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\treturn [ ...full, fullSum ];\r\n\t\t},\r\n\t\tkeys,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Stack spacing={2} sx={{ p: 2 }}>\r\n\t\t\t<h1>Контрольная работа №2 \"Плановые показатели\"</h1>\r\n\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1}>Вид топлива</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1}>Ед. изм.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>Расход Абс.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>Расход УЕ</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>ОВПЗ = П/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>ОВВП = Ф/П</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>ОВФР = Ф/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>Удельный вес (%)</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{ /* Вид топлива */ }\r\n\t\t\t\t\t\t\t<TableCell></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Единицы измерения */ }\r\n\t\t\t\t\t\t\t<TableCell></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t<TableCell>base</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t<TableCell></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t<TableCell>base</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t<TableCell>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t<TableCell>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t<TableCell>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t<TableCell>base</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trows.map((row, index) => (\r\n\t\t\t\t\t\t\t\t<StyledTableRow key={row['Вид топлива']}>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Вид топлива'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={row['Вид топлива']}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => replaceArrayValue(setFuel, fuel, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Единицы измерения'] === 'string'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Единицы измерения'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row['Единицы измерения']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => replaceArrayValue(setUnits, units, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].base === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='base' value={row['Расход Абс.'].base} onChange={ (ev) => replaceArrayValue(setBase, base, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].plan === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='Q_0' value={row['Расход Абс.'].plan} onChange={ (ev) => replaceArrayValue(setPlan, plan, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].fact === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='Q_0' value={row['Расход Абс.'].fact} onChange={ (ev) => replaceArrayValue(setFact, fact, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row.k === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='Q_0' value={row.k} onChange={ (ev) => replaceArrayValue(setK, k, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].fact}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].fact}</TableCell>\r\n\t\t\t\t\t\t\t\t</StyledTableRow>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Stack>\r\n\t);\r\n}\r\n","import { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\nimport { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\n\r\n\r\nexport function calculateMiniRowsPlannedIndicators (rows: PlannedRowIndicatorData[])\r\n{\r\n\treturn rows.map<PlannedRowIndicatorMiniResponse>(function (row)\r\n\t{\r\n\t\tconst main = row['Расход Абс.'];\r\n\r\n\t\tconst parameter1 = Number((main.plan / main.base).toFixed(3));\r\n\t\tconst parameter2 = Number((main.fact / main.plan).toFixed(3));\r\n\t\tconst parameter3 = Number((main.fact / main.base).toFixed(3));\r\n\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Расход УЕ': {\r\n\t\t\t\tbase: Number((main.base * row.k).toFixed(3)),\r\n\t\t\t\tplan: Number((main.plan * row.k).toFixed(3)),\r\n\t\t\t\tfact: Number((main.fact * row.k).toFixed(3)),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВПЗ = П/Б': {\r\n\t\t\t\tk: parameter1,\r\n\t\t\t\t'%': parameter1 * 100,\r\n\t\t\t\t'‰': parameter1 * 1000,\r\n\t\t\t},\r\n\r\n\t\t\t'ОВВП = Ф/П': {\r\n\t\t\t\tk: parameter2,\r\n\t\t\t\t'%': parameter2 * 100,\r\n\t\t\t\t'‰': parameter2 * 1000,\r\n\t\t\t},\r\n\r\n\t\t\t'ОВФР = Ф/Б': {\r\n\t\t\t\tk: parameter3,\r\n\t\t\t\t'%': parameter3 * 100,\r\n\t\t\t\t'‰': parameter3 * 1000,\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n","import { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateRowsWithSumPlannedIndicators (rows: PlannedRowIndicatorMiniResponse[]): PlannedRowsWithSumIndicators\r\n{\r\n\tconst sum = {\r\n\t\t'Вид топлива': 'Σ',\r\n\t\t'Единицы измерения': undefined,\r\n\r\n\t\t'Расход Абс.': {\r\n\t\t\tbase: undefined,\r\n\t\t\tplan: undefined,\r\n\t\t\tfact: undefined,\r\n\t\t},\r\n\r\n\t\tk: undefined,\r\n\r\n\t\t// ===== ===== ===== ===== =====\r\n\r\n\t\t'Расход УЕ': {\r\n\t\t\tbase: rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].base, 0),\r\n\t\t\tplan: rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].plan, 0),\r\n\t\t\tfact: rows.reduce((accumulator, row) => accumulator + row['Расход УЕ'].fact, 0),\r\n\t\t},\r\n\r\n\t\t'ОВПЗ = П/Б': {\r\n\t\t\tk: rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б'].k, 0),\r\n\t\t\t'%': rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б']['‰'], 0),\r\n\t\t\t'‰': rows.reduce((accumulator, row) => accumulator + row['ОВПЗ = П/Б']['‰'], 0),\r\n\t\t},\r\n\r\n\t\t'ОВВП = Ф/П': {\r\n\t\t\tk: rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П'].k, 0),\r\n\t\t\t'%': rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П']['‰'], 0),\r\n\t\t\t'‰': rows.reduce((accumulator, row) => accumulator + row['ОВВП = Ф/П']['‰'], 0),\r\n\t\t},\r\n\r\n\t\t'ОВФР = Ф/Б': {\r\n\t\t\tk: rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б'].k, 0),\r\n\t\t\t'%': rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б']['‰'], 0),\r\n\t\t\t'‰': rows.reduce((accumulator, row) => accumulator + row['ОВФР = Ф/Б']['‰'], 0),\r\n\t\t},\r\n\t};\r\n\r\n\treturn Object.assign(rows, { sum });\r\n}\r\n","import { PlannedRowIndicatorFullResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorFullResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateFullRowsPlannedIndicators (rows: PlannedRowsWithSumIndicators)\r\n{\r\n\treturn rows.map<PlannedRowIndicatorFullResponse>(function (row)\r\n\t{\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Удельный вес (%)': {\r\n\t\t\t\tbase: Number((row['Расход УЕ'].base / rows.sum['Расход УЕ'].base * 100).toFixed(3)),\r\n\t\t\t\tplan: Number((row['Расход УЕ'].plan / rows.sum['Расход УЕ'].plan * 100).toFixed(3)),\r\n\t\t\t\tfact: Number((row['Расход УЕ'].fact / rows.sum['Расход УЕ'].fact * 100).toFixed(3)),\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n"],"names":["StyledTableRow","styled","TableRow","_ref","theme","backgroundColor","palette","action","hover","PlannedIndicatorsPage","searchParams","setSearchParams","useSearchParams","fuel","setFuel","useState","_searchParams$get","get","split","units","setUnits","_searchParams$get2","base","setBase","_searchParams$get3","plan","setPlan","_searchParams$get4","fact","setFact","_searchParams$get5","k","setK","_searchParams$get6","keys","replaceArrayValue","callback","array","index","value","map","v","i","useEffect","join","rows","useMemo","data","push","Number","mini","row","main","parameter1","toFixed","parameter2","parameter3","_objectSpread","calculateMiniRowsPlannedIndicators","miniSum","sum","undefined","reduce","accumulator","Object","assign","calculateRowsWithSumPlannedIndicators","full","calculateFullRowsPlannedIndicators","fullSum","_jsxs","Stack","spacing","sx","p","children","_jsx","TableContainer","Table","TableHead","TableCell","colSpan","TableBody","TextField","minWidth","label","onChange","ev","target","type"],"sourceRoot":""}