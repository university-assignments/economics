{"version":3,"file":"static/js/843.f89bd8fe.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/createBox/createBox.js","../node_modules/@mui/material/esm/Box/boxClasses.js","../node_modules/@mui/material/esm/Box/Box.js","components/table/StyledTableRow.tsx","pages/tests/planned-indicators/PlannedIndicatorsPage.tsx","pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators.ts","pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators.ts","tools/ReplaceArrayValue.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { styled, TableRow } from '@mui/material';\r\n\r\n\r\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.action.hover,\r\n\t},\r\n}));\r\n","import { Box, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { useSearchParams } from 'react-router';\r\nimport { StyledTableRow } from 'src/components/table/StyledTableRow';\r\nimport { calculateFullRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateFullRowsPlannedIndicators';\r\nimport { calculateMiniRowsPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateMiniRowsPlannedIndicators';\r\nimport { calculateRowsWithSumPlannedIndicators } from 'src/pages/tests/planned-indicators/calculations/calculateRowsWithSumPlannedIndicators';\r\nimport { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\nimport { ReplaceArrayValue } from 'src/tools/ReplaceArrayValue';\r\n\r\n\r\nexport default function PlannedIndicatorsPage ()\r\n{\r\n\tconst [ searchParams, setSearchParams ] = useSearchParams();\r\n\r\n\tconst [ fuel, setFuel ] = useState(() => searchParams.get('fuel')?.split('|') || []);\r\n\tconst [ units, setUnits ] = useState(() => searchParams.get('units')?.split('|') || []);\r\n\tconst [ base, setBase ] = useState(() => searchParams.get('base')?.split('|') || []);\r\n\tconst [ plan, setPlan ] = useState(() => searchParams.get('plan')?.split('|') || []);\r\n\tconst [ fact, setFact ] = useState(() => searchParams.get('fact')?.split('|') || []);\r\n\tconst [ k, setK ] = useState(() => searchParams.get('k')?.split('|') || []);\r\n\r\n\tconst keys = [ fuel, units, base, plan, fact, k ];\r\n\r\n\tuseEffect(\r\n\t\t() => setSearchParams({\r\n\t\t\tfuel: fuel.join('|'),\r\n\t\t\tunits: units.join('|'),\r\n\t\t\tbase: base.join('|'),\r\n\t\t\tplan: plan.join('|'),\r\n\t\t\tfact: fact.join('|'),\r\n\t\t\tk: k.join('|'),\r\n\t\t}),\r\n\t\tkeys,\r\n\t);\r\n\r\n\tconst rows = useMemo(\r\n\t\tfunction ()\r\n\t\t{\r\n\t\t\tconst data: PlannedRowIndicatorData[] = [];\r\n\r\n\t\t\tfor (const index in fuel)\r\n\t\t\t{\r\n\t\t\t\tdata.push({\r\n\t\t\t\t\t'Вид топлива': fuel[index],\r\n\t\t\t\t\t'Единицы измерения': units[index],\r\n\r\n\t\t\t\t\t'Расход Абс.': {\r\n\t\t\t\t\t\tbase: Number(base[index]),\r\n\t\t\t\t\t\tplan: Number(plan[index]),\r\n\t\t\t\t\t\tfact: Number(fact[index]),\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tk: Number(k[index]),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst mini = calculateMiniRowsPlannedIndicators(data);\r\n\t\t\tconst miniSum = calculateRowsWithSumPlannedIndicators(mini);\r\n\t\t\tconst full = calculateFullRowsPlannedIndicators(miniSum);\r\n\r\n\t\t\tconst fullSum = {\r\n\t\t\t\t...miniSum.sum,\r\n\r\n\t\t\t\t'Удельный вес (%)': {\r\n\t\t\t\t\tbase: full.map((row) => row['Удельный вес (%)'].base).sum(3),\r\n\t\t\t\t\tplan: full.map((row) => row['Удельный вес (%)'].plan).sum(3),\r\n\t\t\t\t\tfact: full.map((row) => row['Удельный вес (%)'].fact).sum(3),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\treturn [ ...full, fullSum ];\r\n\t\t},\r\n\t\tkeys,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Stack spacing={2} sx={{ p: 2 }}>\r\n\t\t\t<h1>Контрольная работа №2 \"Плановые показатели\"</h1>\r\n\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1}>Вид топлива</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={1}>Ед. изм.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Расход Абс.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={1}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Расход УЕ</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВПЗ = П/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВВП = Ф/П</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>ОВФР = Ф/Б</TableCell>\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }} colSpan={3}>Удельный вес (%)</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{ /* Вид топлива */ }\r\n\t\t\t\t\t\t\t<TableCell></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Единицы измерения */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}></TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>К</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>%</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>‰</TableCell>\r\n\r\n\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>База</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>План</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Факт</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trows.map((row, index) => (\r\n\t\t\t\t\t\t\t\t<StyledTableRow key={row['Вид топлива']}>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Вид топлива'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={row['Вид топлива']}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => ReplaceArrayValue(setFuel, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Единицы измерения'] === 'string'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{ minWidth: '100px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Единицы измерения'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row['Единицы измерения']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (ev) => ReplaceArrayValue(setUnits, index, ev.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход Абс. */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].base === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='База' value={row['Расход Абс.'].base} onChange={ (ev) => ReplaceArrayValue(setBase, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].plan === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='План' value={row['Расход Абс.'].plan} onChange={ (ev) => ReplaceArrayValue(setPlan, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row['Расход Абс.'].fact === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='Факт' value={row['Расход Абс.'].fact} onChange={ (ev) => ReplaceArrayValue(setFact, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* K */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof row.k === 'number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <TextField sx={{ minWidth: '100px' }} type='number' label='К' value={row.k} onChange={ (ev) => ReplaceArrayValue(setK, index, ev.target.value) } />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '-'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Расход УЕ */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['Расход УЕ'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Расход УЕ'].fact}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВПЗ = П/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВПЗ = П/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВПЗ = П/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВВП = Ф/П */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВВП = Ф/П'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВВП = Ф/П']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* ОВФР = Ф/Б */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['ОВФР = Ф/Б'].k}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['%']}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['ОВФР = Ф/Б']['‰']}</TableCell>\r\n\r\n\t\t\t\t\t\t\t\t\t{ /* Удельный вес (%) */ }\r\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ borderLeft: 1 }}>{row['Удельный вес (%)'].base}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].plan}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>{row['Удельный вес (%)'].fact}</TableCell>\r\n\t\t\t\t\t\t\t\t</StyledTableRow>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<Box\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tborder: '3px dashed #ccc',\r\n\t\t\t\t\tborderRadius: '10px',\r\n\t\t\t\t\tp: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<a href='/economics/storage/tests/planned-indicators/economics-2.xlsx'>В формате EXCEL</a>\r\n\t\t\t</Box>\r\n\t\t</Stack>\r\n\t);\r\n}\r\n","import { PlannedRowIndicatorData } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorData';\r\nimport { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\n\r\n\r\nexport function calculateMiniRowsPlannedIndicators (rows: PlannedRowIndicatorData[])\r\n{\r\n\treturn rows.map<PlannedRowIndicatorMiniResponse>(function (row)\r\n\t{\r\n\t\tconst main = row['Расход Абс.'];\r\n\r\n\t\tconst parameter1 = (main.plan / main.base).toFixedNumber(3);\r\n\t\tconst parameter2 = (main.fact / main.plan).toFixedNumber(3);\r\n\t\tconst parameter3 = (main.fact / main.base).toFixedNumber(3);\r\n\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Расход УЕ': {\r\n\t\t\t\tbase: (main.base * row.k).toFixedNumber(3),\r\n\t\t\t\tplan: (main.plan * row.k).toFixedNumber(3),\r\n\t\t\t\tfact: (main.fact * row.k).toFixedNumber(3),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВПЗ = П/Б': {\r\n\t\t\t\tk: parameter1,\r\n\t\t\t\t'%': (parameter1 * 100).toFixedNumber(3),\r\n\t\t\t\t'‰': (parameter1 * 1000).toFixedNumber(3),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВВП = Ф/П': {\r\n\t\t\t\tk: parameter2,\r\n\t\t\t\t'%': (parameter2 * 100).toFixedNumber(3),\r\n\t\t\t\t'‰': (parameter2 * 1000).toFixedNumber(3),\r\n\t\t\t},\r\n\r\n\t\t\t'ОВФР = Ф/Б': {\r\n\t\t\t\tk: parameter3,\r\n\t\t\t\t'%': (parameter3 * 100).toFixedNumber(3),\r\n\t\t\t\t'‰': (parameter3 * 1000).toFixedNumber(3),\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n","import { PlannedRowIndicatorMiniResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorMiniResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateRowsWithSumPlannedIndicators (rows: PlannedRowIndicatorMiniResponse[]): PlannedRowsWithSumIndicators\r\n{\r\n\tconst base = rows.map((row) => row['Расход УЕ'].base).sum(3);\r\n\tconst plan = rows.map((row) => row['Расход УЕ'].plan).sum(3);\r\n\tconst fact = rows.map((row) => row['Расход УЕ'].fact).sum(3);\r\n\r\n\tconst parameter1 = (plan / base).toFixedNumber(3);\r\n\tconst parameter2 = (fact / plan).toFixedNumber(3);\r\n\tconst parameter3 = (fact / base).toFixedNumber(3);\r\n\r\n\tconst sum = {\r\n\t\t'Вид топлива': 'Σ',\r\n\t\t'Единицы измерения': undefined,\r\n\r\n\t\t'Расход Абс.': {\r\n\t\t\tbase: undefined,\r\n\t\t\tplan: undefined,\r\n\t\t\tfact: undefined,\r\n\t\t},\r\n\r\n\t\tk: undefined,\r\n\r\n\t\t// ===== ===== ===== ===== =====\r\n\r\n\t\t'Расход УЕ': {\r\n\t\t\tbase,\r\n\t\t\tplan,\r\n\t\t\tfact,\r\n\t\t},\r\n\r\n\t\t'ОВПЗ = П/Б': {\r\n\t\t\tk: parameter1,\r\n\t\t\t'%': (parameter1 * 100).toFixedNumber(3),\r\n\t\t\t'‰': (parameter1 * 1000).toFixedNumber(3),\r\n\t\t},\r\n\r\n\t\t'ОВВП = Ф/П': {\r\n\t\t\tk: parameter2,\r\n\t\t\t'%': (parameter2 * 100).toFixedNumber(3),\r\n\t\t\t'‰': (parameter2 * 1000).toFixedNumber(3),\r\n\t\t},\r\n\r\n\t\t'ОВФР = Ф/Б': {\r\n\t\t\tk: parameter3,\r\n\t\t\t'%': (parameter3 * 100).toFixedNumber(3),\r\n\t\t\t'‰': (parameter3 * 1000).toFixedNumber(3),\r\n\t\t},\r\n\t};\r\n\r\n\treturn Object.assign(rows, { sum });\r\n}\r\n","import { PlannedRowIndicatorFullResponse } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowIndicatorFullResponse';\r\nimport { PlannedRowsWithSumIndicators } from 'src/pages/tests/planned-indicators/interfaces/PlannedRowsWithSumIndicators';\r\n\r\n\r\nexport function calculateFullRowsPlannedIndicators (rows: PlannedRowsWithSumIndicators)\r\n{\r\n\treturn rows.map<PlannedRowIndicatorFullResponse>(function (row)\r\n\t{\r\n\t\treturn {\r\n\t\t\t...row,\r\n\r\n\t\t\t'Удельный вес (%)': {\r\n\t\t\t\tbase: (row['Расход УЕ'].base / rows.sum['Расход УЕ'].base * 100).toFixedNumber(3),\r\n\t\t\t\tplan: (row['Расход УЕ'].plan / rows.sum['Расход УЕ'].plan * 100).toFixedNumber(3),\r\n\t\t\t\tfact: (row['Расход УЕ'].fact / rows.sum['Расход УЕ'].fact * 100).toFixedNumber(3),\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n}\r\n","import { Dispatch, SetStateAction } from 'react';\r\n\r\n\r\nexport function ReplaceArrayValue<TArrayValue> (callback: Dispatch<SetStateAction<TArrayValue[]>>, index: number, value: TArrayValue)\r\n{\r\n\tcallback(function (prevState)\r\n\t{\r\n\t\treturn prevState.map(function (currentValue, currentIndex)\r\n\t\t{\r\n\t\t\treturn index === currentIndex\r\n\t\t\t\t? value\r\n\t\t\t\t: currentValue;\r\n\t\t});\r\n\t});\r\n}\r\n"],"names":["_excluded","generateUtilityClasses","defaultTheme","createTheme","Box","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutProperties","_jsx","_objectSpread","as","clsx","createBox","THEME_ID","boxClasses","root","ClassNameGenerator","generate","StyledTableRow","TableRow","_ref","backgroundColor","palette","action","hover","PlannedIndicatorsPage","searchParams","setSearchParams","useSearchParams","fuel","setFuel","useState","_searchParams$get","get","split","units","setUnits","_searchParams$get2","base","setBase","_searchParams$get3","plan","setPlan","_searchParams$get4","fact","setFact","_searchParams$get5","k","setK","_searchParams$get6","keys","useEffect","join","rows","useMemo","data","index","push","Number","mini","map","row","main","parameter1","toFixedNumber","parameter2","parameter3","calculateMiniRowsPlannedIndicators","miniSum","sum","Object","assign","calculateRowsWithSumPlannedIndicators","full","calculateFullRowsPlannedIndicators","fullSum","_jsxs","Stack","spacing","sx","p","children","TableContainer","Table","TableHead","TableCell","colSpan","borderLeft","TableBody","TextField","minWidth","label","value","onChange","ev","ReplaceArrayValue","target","type","border","borderRadius","href","callback","prevState","currentValue","currentIndex"],"sourceRoot":""}